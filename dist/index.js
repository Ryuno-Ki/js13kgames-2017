var game=function(t){"use strict";function e(t,e){if(!t)return i;switch(e.type){case s.moveDown:case s.moveLeft:case s.moveRight:case s.moveUp:return Object.assign({},t,e.payload);default:return t}}function n(t,e){if(!t)return h;switch(e.type){case l.add:case l.randomiseGate:case l.setRadius:return Object.assign({},t,e.payload);default:return t}}class s{static get moveDown(){return"HERO_MOVES_DOWN"}static get moveLeft(){return"HERO_MOVES_LEFT"}static get moveRight(){return"HERO_MOVES_RIGHT"}static get moveUp(){return"HERO_MOVES_UP"}}class a{static moveDown(t){return{type:s.moveDown,payload:{radius:-t}}}static moveLeft(t){return{type:s.moveLeft,payload:{angle:-t}}}static moveRight(t){return{type:s.moveRight,payload:{angle:t}}}static moveUp(t){return{type:s.moveUp,payload:{radius:t}}}}const i={angle:0,radius:0};class r{static createStore(t,e){const n=t(e,{type:"DUMMY",payload:{}}),s=Object.assign({},n,e);return new r(t,s)}static reduceReducers(t){return(e,n)=>{const s={};return Object.keys(t).forEach(a=>{const i=(0,t[a])(e?e[a]:null,n);s[a]=i}),s}}dispatch(t){const e=this.getState(),n=this._reducer(e,t);this._state=n,this._subscribers.forEach(t=>{t(n)})}getState(){return this._state}subscribe(t){this._subscribers.push(t);return()=>this._subscribers}constructor(t,e){const n=e||{};this._state=Object.assign({},n),this._reducer=t,this._subscribers=[]}}class o{handleTouchMove(t){if(!this.xDown||!this.yDown)return;const e=this.handlers,n=t.touches[0].clientX,s=t.touches[0].clientY;this.xDiff=this.xDown-n,this.yDiff=this.yDown-s,Math.abs(this.xDiff)>Math.abs(this.yDiff)?this.xDiff>0?e.onLeft(this.xDiff):e.onRight(this.xDiff):this.yDiff>0?e.onUp(this.yDiff):e.onDown(this.yDiff),this.xDown=null,this.yDown=null}onTouchMove(t){this.handleTouchMove(t)}onTouchStart(t){this.xDown=t.touches[0].clientX,this.yDown=t.touches[0].clientY}run(){const t=this,e=t.onTouchMove;this.element.addEventListener("touchmove",e.bind(t),!1)}constructor(t,e){this.xDown=null,this.yDown=null,this.element=t,this.element.addEventListener("touchstart",this.onTouchStart.bind(this),!1);const n=e.onDown,s=e.onLeft,a=e.onRight,i=e.onUp;this.handlers={onDown:n,onLeft:s,onRight:a,onUp:i}}}class c{static create(t){const e=c.createCanvas(t);window.document.body.appendChild(e);const n=c.createContainer(),s=c.createLevel(),a=c.createAngleInput();return n.appendChild(s),n.appendChild(a),window.document.body.appendChild(n),e}static createAngleInput(){const t=window.document.createElement("label"),e=window.document.createTextNode("Angle in degree"),n=window.document.createElement("input");return n.setAttribute("id","angle"),n.setAttribute("min","1"),n.setAttribute("type","number"),n.setAttribute("value","5"),t.appendChild(e),t.appendChild(n),t}static createCanvas(t){const e=window.document.createElement("canvas");return e.setAttribute("id",t),e.setAttribute("height",`${c.HEIGHT}px`),e.setAttribute("width",`${c.WIDTH}px`),e}static createContainer(){return window.document.createElement("div")}static createLevel(){const t=window.document.createElement("label"),e=window.document.createTextNode("Level"),n=window.document.createElement("input");return n.setAttribute("id","level"),n.setAttribute("min","1"),n.setAttribute("type","number"),n.setAttribute("value","5"),t.appendChild(e),t.appendChild(n),t}static get GATESIZE(){return.15}static get HEIGHT(){return Math.min(window.innerHeight,window.innerWidth)}static get USERSIZE(){return c.WALLDISTANCE/3}static get USERROTATION(){const t=window.document.getElementById("angle");if(null===t)return console.log("Fallback USERROTATION"),.02*d.euclideanDistance(c.HEIGHT,c.WIDTH);const e=parseInt(t.value,10);return d.mapDegreeToRadians(e)}static get USERVELOCITY(){return 3}static get WALLDISTANCE(){return.06*(c.HEIGHT+c.WIDTH)/2}static get WIDTH(){return Math.min(window.innerHeight,window.innerWidth)}static updateTimer(t){window.document.getElementById("elapsed").innerText=t}render(t){const e=this.context,n=t.walls.walls;e.clearRect(0,0,c.WIDTH,c.HEIGHT),n.forEach(t=>{this.renderWall(t)}),this.renderHero(t.user)}renderHero(t){const e=.9*(2*Math.PI),n=c.USERSIZE,s=this.context,a=d.mapPolarToCartesian({r:t.radius,phi:t.angle}),i=d.coordinationSystemToVertex(a.x,a.y),r=i.p,o=i.q;s.fillStyle="black",s.beginPath(),s.arc(r,o,n,0,e),s.fill()}renderWall(t){const e=c.WIDTH/2,n=c.HEIGHT/2,s=this.context,a=t.gate.end,i=t.gate.start,r=t.radius;s.beginPath(),s.arc(e,n,r,a,i),s.stroke()}constructor(t){this.element=c.create(t),this.context=this.element.getContext("2d")}}class d{static coordinationSystemToCenter(t,e){return{x:t-c.WIDTH/2,y:e-c.HEIGHT/2}}static coordinationSystemToVertex(t,e){return{p:t+c.WIDTH/2,q:e+c.HEIGHT/2}}static euclideanDistance(t,e){return Math.sqrt(t*t+e*e)}static mapCartesianToPolar(t){const e=t.x,n=t.y;return{r:Math.sqrt(Math.pow(e,2)+Math.pow(n,2)),phi:Math.atan2(n,e)}}static mapDegreeToRadians(t){return t*Math.PI/180}static mapPolarToCartesian(t){const e=t.phi,n=t.r;return{x:n*Math.cos(e),y:n*Math.sin(e)}}static mapRadiansToDegree(t){return 180*t/Math.PI}static normaliseAngle(t){const e=2*Math.PI;return t<0?(t+e)%e:t%e}}class l{static get add(){return"WALL_ADD"}static get randomiseGate(){return"WALL_RANDOMISE_GATE"}static get setRadius(){return"WALL_SET_RADIUS"}}class u{static _getRandomStart(){return 2*Math.PI*Math.random()}static _getRandomEnd(t,e){return d.normaliseAngle(t+e)}static add(t){const e=t.walls.slice(),n=Object.assign({},u.randomiseGate(t.width).payload,u.setRadius(t.radius).payload),s={walls:e.concat(n)};return Object.assign({},t,{type:l.add,payload:s})}static randomiseGate(t){const e=u._getRandomStart(),n=u._getRandomEnd(e,t);return{type:l.randomiseGate,payload:{gate:{start:e,end:n}}}}static setRadius(t){return{type:l.setRadius,payload:{radius:t}}}}const h={walls:[{radius:10,gate:{end:1,start:0}}]};class w{static get KEYMAP(){return{LEFT:37,UP:38,RIGHT:39,DOWN:40}}static notifyUser(){const t=(new Date).toISOString();console.log("Hit wall",t),window.document.body.classList.add("flash"),setTimeout(()=>{window.document.body.classList.remove("flash")},500)}static detectCollision(){return!1}static update(t,e){const n=e.getState();w.detectCollision(n)&&w.notifyUser(),t.render(e.getState())}init(){for(let t=2;t<6;t++){let e={walls:this.store.getState().walls.walls,radius:10*t,width:c.WALLDISTANCE};this.store.dispatch(u.add(e))}this.registerSwipeHandlers()}onKeyDown(t){const e=this.hero,n=t.keyCode,s=w.KEYMAP;switch(n){case s.LEFT:e.moveLeft(),t.preventDefault();break;case s.UP:e.moveUp(),t.preventDefault();break;case s.RIGHT:e.moveRight(),t.preventDefault();break;case s.DOWN:e.moveDown(),t.preventDefault();break;default:console.log("Received keyCode",t.keyCode)}}registerArrowKeyHandlers(){const t=this,e=this.onKeyDown;window.document.body.addEventListener("keydown",e.bind(t),!1)}registerSwipeHandlers(){const t=this.store,e={onDown:e=>{t.dispatch(a.moveDown(e))},onLeft:e=>{t.dispatch(a.moveLeft(e))},onRight:e=>{t.dispatch(a.moveRight(e))},onUp:e=>{t.dispatch(a.moveUp(e))}};new o(this.world.element,e).run()}constructor(t){const s={user:e,walls:n},a=r.reduceReducers(s);this.store=r.createStore(a),this.world=new c(t),this.store.subscribe(()=>{w.update(this.world,this.store)})}}return new w("game").init(),t.Game=w,t}({});
